CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(64),
    email VARCHAR(64),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    request_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS items (
    item_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(64) ,
    description VARCHAR(128),
    available bool,
    owner_id integer,
    request_id integer,
    CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users (user_id),
    CONSTRAINT fk_item_request FOREIGN KEY (request_id) REFERENCES requests (request_id)
);

CREATE TABLE IF NOT EXISTS bookings (
    booking_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date timestamp,
    end_date timestamp,
    item_id integer NOT NULL,
    booker_id integer NOT NULL,
    status VARCHAR(32) NOT NULL,
    CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items (item_id),
    CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS comments (
    comment_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(128) NOT NULL,
    item_id integer NOT NULL,
    author_id integer NOT NULL,
    created_at timestamp,
    CONSTRAINT fk_item_comment FOREIGN KEY (item_id) REFERENCES items (item_id),
    CONSTRAINT fk_comment_author FOREIGN KEY (author_id) REFERENCES users (user_id)
);


